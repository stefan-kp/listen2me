.max-w-7xl.mx-auto.px-4.sm:px-6.lg:px-8.py-8.flex.flex-col{ class: "h-[calc(100vh-4rem)]" }
  .flex.items-center.justify-between.mb-4.flex-shrink-0
    .flex.items-center.gap-4
      = link_to speeches_path, 
        class: "text-gray-600 hover:text-gray-900",
        "aria-label": t('.back_to_home') do
        = heroicon "arrow-left", options: { class: "h-5 w-5" }
      %h1.text-2xl.font-bold.text-gray-900= t('.conversation')

  .flex-1.flex.flex-col.min-h-0
    #messages.flex-1.overflow-y-auto.space-y-4.mb-4{
      role: "log",
      "aria-label": t('.messages_list'),
      data: { controller: "scroll-into-view" }}
      - if @messages.any?
        = render partial: "messages/message", collection: @messages
      - else
        %p.text-center.text-gray-500= t('.no_messages')

    .flex-shrink-0.space-y-4.bg-white.pt-4
      - if @suggestions.present?
        #suggestions.bg-gray-50.rounded-lg.p-4{"aria-label": t('.suggestions')}
          = render "messages/suggestions", suggestions: @suggestions

      .conversation-container{"data-controller": "audio-recorder", "data-audio-recorder-conversation-id-value": @conversation.id}
        .flex.items-center.gap-2
          = text_field_tag :content, nil,
            class: "flex-1 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500",
            placeholder: t('.enter_message'),
            "data-audio-recorder-target": "input"
            
          %button.p-2.rounded-full.hover:bg-gray-100{
            type: "button",
            "data-action": "click->audio-recorder#toggleRecording"}
            = heroicon "microphone", 
              options: { class: "h-6 w-6 text-gray-400", "data-audio-recorder-target": "indicator" } 