// human-signals@2.1.0 downloaded from https://ga.jspm.io/npm:human-signals@2.1.0/build/src/main.js

import n from"os";var e={};Object.defineProperty(e,"__esModule",{value:true});e.SIGNALS=void 0;const t=[{name:"SIGHUP",number:1,action:"terminate",description:"Terminal closed",standard:"posix"},{name:"SIGINT",number:2,action:"terminate",description:"User interruption with CTRL-C",standard:"ansi"},{name:"SIGQUIT",number:3,action:"core",description:"User interruption with CTRL-\\",standard:"posix"},{name:"SIGILL",number:4,action:"core",description:"Invalid machine instruction",standard:"ansi"},{name:"SIGTRAP",number:5,action:"core",description:"Debugger breakpoint",standard:"posix"},{name:"SIGABRT",number:6,action:"core",description:"Aborted",standard:"ansi"},{name:"SIGIOT",number:6,action:"core",description:"Aborted",standard:"bsd"},{name:"SIGBUS",number:7,action:"core",description:"Bus error due to misaligned, non-existing address or paging error",standard:"bsd"},{name:"SIGEMT",number:7,action:"terminate",description:"Command should be emulated but is not implemented",standard:"other"},{name:"SIGFPE",number:8,action:"core",description:"Floating point arithmetic error",standard:"ansi"},{name:"SIGKILL",number:9,action:"terminate",description:"Forced termination",standard:"posix",forced:true},{name:"SIGUSR1",number:10,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGSEGV",number:11,action:"core",description:"Segmentation fault",standard:"ansi"},{name:"SIGUSR2",number:12,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGPIPE",number:13,action:"terminate",description:"Broken pipe or socket",standard:"posix"},{name:"SIGALRM",number:14,action:"terminate",description:"Timeout or timer",standard:"posix"},{name:"SIGTERM",number:15,action:"terminate",description:"Termination",standard:"ansi"},{name:"SIGSTKFLT",number:16,action:"terminate",description:"Stack is empty or overflowed",standard:"other"},{name:"SIGCHLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"posix"},{name:"SIGCLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"other"},{name:"SIGCONT",number:18,action:"unpause",description:"Unpaused",standard:"posix",forced:true},{name:"SIGSTOP",number:19,action:"pause",description:"Paused",standard:"posix",forced:true},{name:"SIGTSTP",number:20,action:"pause",description:'Paused using CTRL-Z or "suspend"',standard:"posix"},{name:"SIGTTIN",number:21,action:"pause",description:"Background process cannot read terminal input",standard:"posix"},{name:"SIGBREAK",number:21,action:"terminate",description:"User interruption with CTRL-BREAK",standard:"other"},{name:"SIGTTOU",number:22,action:"pause",description:"Background process cannot write to terminal output",standard:"posix"},{name:"SIGURG",number:23,action:"ignore",description:"Socket received out-of-band data",standard:"bsd"},{name:"SIGXCPU",number:24,action:"core",description:"Process timed out",standard:"bsd"},{name:"SIGXFSZ",number:25,action:"core",description:"File too big",standard:"bsd"},{name:"SIGVTALRM",number:26,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGPROF",number:27,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGWINCH",number:28,action:"ignore",description:"Terminal window size changed",standard:"bsd"},{name:"SIGIO",number:29,action:"terminate",description:"I/O is available",standard:"other"},{name:"SIGPOLL",number:29,action:"terminate",description:"Watched event",standard:"other"},{name:"SIGINFO",number:29,action:"ignore",description:"Request for process information",standard:"other"},{name:"SIGPWR",number:30,action:"terminate",description:"Device running out of power",standard:"systemv"},{name:"SIGSYS",number:31,action:"core",description:"Invalid system call",standard:"other"},{name:"SIGUNUSED",number:31,action:"terminate",description:"Invalid system call",standard:"other"}];e.SIGNALS=t;var r={};Object.defineProperty(r,"__esModule",{value:true});r.SIGRTMAX=r.getRealtimeSignals=void 0;const getRealtimeSignals=function(){const n=i-a+1;return Array.from({length:n},getRealtimeSignal)};r.getRealtimeSignals=getRealtimeSignals;const getRealtimeSignal=function(n,e){return{name:`SIGRT${e+1}`,number:a+e,action:"terminate",description:"Application-specific signal (realtime)",standard:"posix"}};const a=34;const i=64;r.SIGRTMAX=i;var o={};Object.defineProperty(o,"__esModule",{value:true});o.getSignals=void 0;var s=n;var d=e;var c=r;const getSignals=function(){const n=(0,c.getRealtimeSignals)();const e=[...d.SIGNALS,...n].map(normalizeSignal);return e};o.getSignals=getSignals;const normalizeSignal=function({name:n,number:e,description:t,action:r,forced:a=false,standard:i}){const{signals:{[n]:o}}=s.constants;const d=void 0!==o;const c=d?o:e;return{name:n,number:c,description:t,supported:d,action:r,forced:a,standard:i}};var m={};Object.defineProperty(m,"__esModule",{value:true});m.signalsByNumber=m.signalsByName=void 0;var u=n;var p=o;var b=r;const getSignalsByName=function(){const n=(0,p.getSignals)();return n.reduce(getSignalByName,{})};const getSignalByName=function(n,{name:e,number:t,description:r,supported:a,action:i,forced:o,standard:s}){return{...n,[e]:{name:e,number:t,description:r,supported:a,action:i,forced:o,standard:s}}};const S=getSignalsByName();m.signalsByName=S;const getSignalsByNumber=function(){const n=(0,p.getSignals)();const e=b.SIGRTMAX+1;const t=Array.from({length:e},(e,t)=>getSignalByNumber(t,n));return Object.assign({},...t)};const getSignalByNumber=function(n,e){const t=findSignalByNumber(n,e);if(void 0===t)return{};const{name:r,description:a,supported:i,action:o,forced:s,standard:d}=t;return{[n]:{name:r,number:n,description:a,supported:i,action:o,forced:s,standard:d}}};const findSignalByNumber=function(n,e){const t=e.find(({name:e})=>u.constants.signals[e]===n);return void 0!==t?t:e.find(e=>e.number===n)};const l=getSignalsByNumber();m.signalsByNumber=l;const I=m.__esModule;const g=m.signalsByNumber,G=m.signalsByName;export default m;export{I as __esModule,G as signalsByName,g as signalsByNumber};

